name: Terraform Remote State

env:
  TF_WORKING_DIRECTORY: ./terraform/remote_state
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_STATE_BUCKET_NAME: ${{ secrets.AWS_STATE_BUCKET_NAME }}
  AWS_STATE_BUCKET_PATH: ${{ secrets.AWS_STATE_BUCKET_PATH }}
  AWS_STATE_DB_TABLE: ${{ secrets.AWS_STATE_DB_TABLE }}
  
on:
  push:
    paths:    
      - '.github/workflows/terraform-remote-state.yml'

jobs:
  terraform-state-init:
    if: "contains(github.event.head_commit.message, 'init')"
    name: 'Terraform Remote State Init'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.TF_WORKING_DIRECTORY }}
    steps:
    - uses: actions/checkout@v2
    - uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      id: init
      run: terraform init

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color
      continue-on-error: true
      
    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1

    - name: Terraform Apply
      run: terraform apply -auto-approve
      
  terraform-state-destroy:
    if: "contains(github.event.head_commit.message, 'destroy')"
    name: 'Terraform Remote State Destroy'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.TF_WORKING_DIRECTORY }}
    steps:
    - uses: actions/checkout@v2
    - uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      id: init
      run: terraform init

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color
      continue-on-error: true
      
    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1

    - name: Terraform Destroy
      run: terraform destroy -auto-approve
      
