name: Terraform destroy & clean up

env:
  TF_BACKEND_WORKING_DIRECTORY: ./terraform/backend
  TF_FRONTEND_WORKING_DIRECTORY: ./terraform/frontend
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: "eu-central-1"
  AWS_STATE_BUCKET_NAME: "my-users-app-2021-tfstate"
  AWS_STATE_BUCKET_FRONTEND_PATH: "apps/frontend/app.state"
  AWS_STATE_BUCKET_BACKEND_PATH: "apps/backend/app.state"
  AWS_STATE_DB_FRONTEND_TABLE: "apps-frontend-tfstatelock"
  AWS_STATE_DB_BACKEND_TABLE: "apps-backend-tfstatelock"
  
on:
  push:
    paths:    
      - '.github/workflows/terraform-destroy.yml'

jobs:
  terraform_destroy_backend:
    if: "contains(github.event.head_commit.message, 'destroy')"
    name: 'Destroy backend'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.TF_BACKEND_WORKING_DIRECTORY }}
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
      
      - name: Terraform Init
        id: init
        run: |
          terraform init \
                -backend-config="bucket=${{ env.AWS_STATE_BUCKET_NAME }}" \
                -backend-config="key=${{ env.AWS_STATE_BUCKET_BACKEND_PATH }}" \
                -backend-config="region=${{ env.AWS_REGION }}" \
                -backend-config="dynamodb_table=${{ env.AWS_STATE_DB_BACKEND_TABLE }}" \
                -backend-config="access_key=${{ env.AWS_ACCESS_KEY_ID }}" \
                -backend-config="secret_key=${{ env.AWS_SECRET_ACCESS_KEY }}"

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Destroy
        id: destroy
        run: terraform destroy -auto-approve
       
       
  terraform_destroy_frontend:
    if: "contains(github.event.head_commit.message, 'destroy')"
    name: 'Destroy frontend'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.TF_FRONTEND_WORKING_DIRECTORY }}
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
      
      - name: Terraform Init
        id: init
        run: |
          terraform init \
                -backend-config="bucket=${{ env.AWS_STATE_BUCKET_NAME }}" \
                -backend-config="key=${{ env.AWS_STATE_BUCKET_FRONTEND_PATH }}" \
                -backend-config="region=${{ env.AWS_REGION }}" \
                -backend-config="dynamodb_table=${{ env.AWS_STATE_DB_FRONTEND_TABLE }}" \
                -backend-config="access_key=${{ env.AWS_ACCESS_KEY_ID }}" \
                -backend-config="secret_key=${{ env.AWS_SECRET_ACCESS_KEY }}"

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Destroy
        id: destroy
        run: terraform destroy -auto-approve
